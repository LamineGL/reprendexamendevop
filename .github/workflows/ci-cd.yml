name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # D√©clenchement du pipeline uniquement sur la branche principale

jobs:
  build-and-push:
    runs-on: ubuntu-latest  

    steps:
      - name: R√©cup√©rer le code source du repository
        uses: actions/checkout@v3 

      - name: V√©rifier les fichiers r√©cup√©r√©s
        run: ls -la  # V√©rifie que le code a bien √©t√© r√©cup√©r√© dans l'environnement CI/CD

      - name: Se connecter √† DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Construire l'image Docker avec un tag unique
        run: |
          TIMESTAMP=$(date +'%Y%m%d')
          BUILD_TAG="onlybettermld/mon-examen-mld:$TIMESTAMP-${{ github.run_number }}"
          
          echo " Building Docker image..."
          docker build -t onlybettermld/mon-examen-mld:latest .
          docker tag onlybettermld/mon-examen-mld:latest $BUILD_TAG

          echo " Image built successfully: $BUILD_TAG"

      - name: Pousser l'image Docker sur DockerHub
        run: |
          TIMESTAMP=$(date +'%Y%m%d')
          BUILD_TAG="onlybettermld/mon-examen-mld:$TIMESTAMP-${{ github.run_number }}"

          echo "Pushing Docker images to DockerHub..."
          docker push onlybettermld/mon-examen-mld:latest
          docker push $BUILD_TAG

          echo "Docker images pushed successfully!"

      - name: Nettoyer l'environnement Docker apr√®s le build
        run: |
          echo "üßπ Cleaning up local Docker images..."
          docker rmi onlybettermld/mon-examen-mld:latest || true
          docker rmi $(docker images -q "onlybettermld/mon-examen-mld") || true
          echo " Cleanup done!"
